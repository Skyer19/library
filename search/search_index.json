{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This is a library.</p> <p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul> <p>\u5566\u5566\u5566\u5566</p>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about/","title":"About","text":"<p>Hello everyone!</p> <p>For full documentation visit mkdocs.org.</p>"},{"location":"about/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"about/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"styling-your-docs/","title":"Index","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"styling-your-docs/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"styling-your-docs/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"writing-your-docs/","title":"Index","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"writing-your-docs/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"writing-your-docs/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"PDL/lecture1/","title":"About","text":"<p>Hello everyone!</p> <p>For full documentation visit mkdocs.org.</p>"},{"location":"PDL/lecture1/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"PDL/lecture1/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"PDL/lecture2/","title":"Lecture 2 Consensus and Ethereum","text":""},{"location":"PDL/lecture2/#consensus","title":"Consensus","text":""},{"location":"PDL/lecture2/#problem","title":"Problem","text":"<p>We need: a shared, immutable, non-custodial, robust public record of state</p> <p>Soluction:</p> <p>Decentralisation -&gt; ? How can we keep the machines/snodes in sync? -&gt; State Machine Replication Problem</p>"},{"location":"PDL/lecture2/#state-machine-replication-smr","title":"State Machine Replication (SMR)","text":"<p>What is the SMR: A message system supporting fault-tolerance.</p> <p>How to realise: Multiple machines</p> <p>How to keep machines in sync? Replicate servers and coordinating client interactions with server replicas.</p> <p>Determinism:</p> <p>Start from a shared initial state, the same instructions given to each machine should result in the same end state.</p>"}]}